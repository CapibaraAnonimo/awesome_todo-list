var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.602,1,1.059]],["body/components/AppComponent.html",[0,1.001,1,1.865,2,2.008,3,0.375,4,0.329,5,1.676,6,1.676,7,1.676,8,1.676,9,0.329,10,3.125,11,1.676,12,2.868,13,2.642,14,3.158,15,2.179,16,5.389,17,2.179,18,4.849,19,0.693,20,0.03,21,0.755,22,0.375,23,0.821,24,3.73,25,2.727,26,2.727,27,1.426,28,2.179,29,2.179,30,1.676,31,2.564,32,1.676,33,0.982,34,1.676,35,1.128,36,1.676,37,1.219,38,1.676,39,1.676,40,1.219,41,1.676,42,1.63,43,2.179,44,1.128,45,1.676,46,1.219,47,1.128,48,1.128,49,1.676,50,1.219,51,1.318,52,1.676,53,1.676,54,0.022,55,0.022]],["title/modules/AppModule.html",[56,1.904,57,2.11]],["body/modules/AppModule.html",[1,1.978,3,0.254,4,0.223,9,0.223,13,1.045,19,1.167,20,0.031,21,0.511,22,0.254,23,0.555,27,0.965,35,1.624,37,1.755,40,1.755,42,1.459,44,1.624,46,1.755,48,1.624,50,1.755,54,0.017,55,0.017,56,1.483,57,4.272,58,1.349,59,1.644,60,3.67,61,3.67,62,3.67,63,1.644,64,2.115,65,2.115,66,2.115,67,2.115,68,2.115,69,3.154,70,3.154,71,1.624,72,2.412,73,2.625,74,3.1,75,2.115,76,1.644,77,2.524,78,3.1,79,2.705,80,3.7,81,3.1,82,1.845,83,2.524,84,2.524,85,2.574,86,3.7,87,1.234,88,2.115,89,3.7,90,2.524,91,2.524,92,3.7,93,3.7,94,1.644,95,2.524,96,1.483,97,2.41,98,2.524,99,1.644,100,2.524,101,1.845,102,2.524,103,2.524,104,1.845,105,2.524,106,2.115,107,2.524,108,1.349,109,2.524,110,2.115,111,2.174,112,2.174,113,2.174,114,1.532]],["title/modules/AppRoutingModule.html",[56,1.904,69,1.904]],["body/modules/AppRoutingModule.html",[0,1.033,3,0.401,4,0.353,9,0.353,19,1.146,20,0.031,21,0.808,22,0.401,23,0.878,35,1.532,44,1.532,48,1.532,54,0.023,55,0.023,58,2.133,63,2.599,69,2.976,78,3.344,79,3.703,88,3.344,106,3.344,110,3.344,115,3.991,116,3.991,117,5.065,118,3.624,119,1.793,120,3.703,121,3.991,122,1.652,123,5.853,124,3.991,125,2.918,126,2.599,127,3.991,128,3.991]],["title/injectables/AuthService.html",[71,0.98,129,1.239]],["body/injectables/AuthService.html",[3,0.258,4,0.227,9,0.227,14,1.671,19,1.1,20,0.031,21,0.52,22,0.258,23,0.565,33,0.984,47,1.133,54,0.017,55,0.017,71,1.133,87,1.255,119,1.153,125,3.233,126,2.881,129,1.432,130,1.671,131,2.15,132,0.291,133,0.824,134,4.333,135,1.224,136,4.863,137,4.863,138,4.863,139,4.074,140,0.907,141,1.876,142,3.555,143,2.727,144,1.729,145,3.746,146,1.446,147,0.683,148,1.446,149,2.738,150,2.567,151,1.765,152,2.163,153,2.567,154,1.133,155,2.567,156,2.15,157,3.746,158,3.167,159,2.567,160,2.764,161,2.567,162,1.255,163,3.746,164,3.167,165,2.567,166,2.881,167,4.333,168,1.876,169,2.567,170,1.255,171,1.063,172,2.15,173,1.691,174,1.508,175,1.876,176,2.567,177,2.567,178,2.15,179,2.15,180,1.876,181,1.372,182,0.981,183,5.172,184,2.567,185,2.324,186,2.567,187,1.671,188,2.567,189,2.567,190,2.002,191,3.746,192,3.138,193,2.567,194,2.567,195,2.567,196,2.567,197,2.567,198,1.671,199,2.15,200,2.567,201,2.567,202,2.567,203,2.567,204,1.508,205,2.567,206,2.567,207,1.508,208,2.567,209,1.255,210,2.567]],["title/interceptors/CorsInterceptor.html",[108,1.732,211,2.11]],["body/interceptors/CorsInterceptor.html",[3,0.282,4,0.248,9,0.248,19,1.033,20,0.031,21,0.568,22,0.509,23,1.023,33,0.568,51,0.991,54,0.018,55,0.018,71,1.619,72,1.794,73,1.371,85,2.345,87,1.371,108,2.134,111,1.647,112,1.647,113,1.647,114,1.653,119,1.26,122,2.097,129,1.936,132,0.317,135,1.52,143,2.274,144,0.848,146,0.916,147,0.505,148,0.916,151,0.916,160,2.862,170,1.371,181,2.134,182,1.072,185,2.406,187,1.826,190,1.499,198,1.826,212,2.05,213,1.647,214,3.914,215,2.05,216,4.068,217,2.618,218,4.068,219,2.804,220,3.914,221,2.05,222,3.703,223,2.918,224,2.918,225,2.05,226,2.05,227,2.05,228,3.028,229,3.399,230,2.05,231,2.05,232,2.05,233,1.952,234,2.05,235,1.826,236,2.05,237,1.826,238,1.647,239,2.918,240,2.05,241,2.05,242,2.05,243,2.05,244,2.918,245,2.05,246,1.647,247,2.05,248,2.05,249,2.05,250,3.399,251,3.399,252,3.399,253,2.918,254,2.05,255,2.05,256,1.826,257,2.05,258,2.05,259,2.05,260,2.05]],["title/interfaces/CreateTask.html",[261,0.713,262,1.732]],["body/interfaces/CreateTask.html",[3,0.451,4,0.397,9,0.397,20,0.029,22,0.451,54,0.025,55,0.025,132,0.508,133,1.199,147,0.742,154,1.976,261,0.988,262,2.912,263,1.859,264,2.638,265,3.282,266,3.584,267,3.261,268,4.46]],["title/interfaces/CreateUser.html",[164,2.11,261,0.713]],["body/interfaces/CreateUser.html",[3,0.438,4,0.385,9,0.385,20,0.029,22,0.438,33,1.223,54,0.024,55,0.024,132,0.494,133,1.178,147,0.764,154,1.998,164,3.486,207,3.549,209,2.954,261,0.96,263,1.805,264,2.562,269,3.654,270,3.933]],["title/components/DashboardComponent.html",[0,0.602,35,0.98]],["body/components/DashboardComponent.html",[0,0.482,1,0.376,2,0.818,3,0.116,4,0.102,5,0.517,6,0.517,7,0.517,8,0.517,9,0.102,11,0.517,12,2.073,13,1.91,15,0.887,17,0.887,19,0.857,20,0.031,21,0.233,22,0.116,23,0.253,25,1.444,26,1.444,27,0.44,28,0.887,29,0.887,30,0.517,31,1.554,32,0.517,33,0.963,34,0.517,35,0.93,36,0.517,37,0.376,38,1.165,39,0.517,40,0.646,41,0.517,42,1.571,43,0.887,44,0.348,45,0.517,46,0.376,47,0.597,48,0.348,49,0.517,50,0.376,51,0.698,52,0.517,53,0.517,54,0.009,55,0.009,71,1.221,97,0.75,99,0.75,122,1.671,132,0.392,133,0.435,134,1.655,135,0.646,140,0.698,144,1.596,146,1.508,147,0.677,148,1.454,151,1.392,152,2.083,154,0.93,162,1.692,167,1.655,171,2.389,173,1.443,182,0.755,185,1.554,267,1.386,271,0.965,272,2.593,273,1.975,274,2.173,275,1.689,276,2.253,277,2.898,278,2.593,279,2.593,280,2.173,281,1.975,282,2.576,283,1.975,284,1.975,285,1.975,286,1.975,287,1.975,288,1.975,289,1.152,290,2.017,291,2.898,292,1.975,293,1.975,294,1.152,295,0.965,296,1.975,297,3.074,298,1.152,299,1.152,300,1.975,301,1.152,302,1.975,303,1.152,304,1.975,305,1.152,306,1.152,307,1.975,308,1.975,309,4.259,310,3.074,311,1.152,312,1.152,313,1.975,314,1.152,315,2.529,316,1.975,317,4.759,318,1.152,319,1.152,320,1.152,321,1.692,322,1.554,323,1.152,324,1.152,325,1.975,326,1.152,327,1.152,328,1.152,329,1.975,330,1.975,331,0.965,332,0.966,333,1.286,334,1.689,335,0.75,336,1.16,337,0.842,338,0.842,339,0.677,340,1.152,341,0.75,342,1.655,343,0.965,344,1.152,345,1.152,346,1.152,347,3.459,348,1.152,349,1.152,350,1.975,351,1.975,352,1.975,353,1.152,354,1.152,355,3.074,356,1.152,357,3.074,358,1.152,359,3.074,360,1.975,361,1.975,362,1.152,363,1.975,364,2.593,365,1.975,366,1.975,367,1.975,368,1.152,369,3.074,370,1.152,371,1.152,372,1.152,373,1.152,374,1.152,375,1.152,376,1.152,377,1.152,378,1.152,379,1.152,380,1.152,381,1.152,382,1.152,383,2.593,384,1.152,385,1.152,386,1.152,387,1.152,388,0.75,389,1.152,390,0.75,391,0.965,392,2.898,393,2.593,394,2.458,395,1.152,396,1.152,397,1.152,398,1.152,399,1.152,400,1.152,401,1.152,402,1.152,403,1.975,404,1.975,405,1.152,406,1.152,407,1.975,408,1.975,409,1.975,410,1.152,411,1.152,412,1.975,413,1.152,414,1.975,415,1.152,416,1.152,417,1.152,418,3.911,419,1.975,420,1.444,421,1.975,422,1.896,423,1.444,424,1.152,425,3.162,426,1.655,427,1.152,428,0.965,429,0.965,430,1.975,431,1.689,432,1.152,433,1.655,434,1.152,435,1.444,436,1.152,437,2.951,438,1.444,439,2.593,440,1.975,441,1.152,442,1.975,443,1.975,444,1.975,445,0.965,446,1.152,447,3.774,448,0.965,449,1.152,450,1.975,451,1.152,452,3.074,453,1.152,454,1.286,455,1.152,456,1.152,457,0.842,458,0.842,459,0.842,460,1.152,461,1.152,462,1.975,463,1.152,464,1.152,465,1.152,466,1.152,467,1.975,468,2.593,469,3.074,470,1.152,471,1.152,472,1.975,473,1.444,474,2.593,475,1.152,476,1.152,477,1.152,478,1.152,479,1.975,480,1.152,481,1.152,482,1.975,483,1.975,484,1.975,485,1.975,486,1.975,487,1.152,488,1.152,489,1.152,490,1.152,491,1.152,492,1.152]],["title/components/DashboardToolbarComponent.html",[0,0.602,37,1.059]],["body/components/DashboardToolbarComponent.html",[0,0.789,1,0.783,2,1.474,3,0.241,4,0.212,5,1.076,6,1.076,7,1.076,8,1.076,9,0.212,11,1.076,12,2.618,13,2.412,15,1.6,17,1.6,19,0.978,20,0.031,21,0.485,22,0.241,23,0.527,27,0.916,28,1.6,29,1.6,30,1.076,31,2.114,32,1.076,33,0.86,34,1.076,35,0.725,36,1.076,37,1.538,38,2.518,39,1.076,40,0.783,41,1.076,42,1.65,43,1.6,44,0.725,45,1.076,46,1.164,47,1.52,48,0.725,49,1.076,50,0.783,51,0.846,52,1.076,53,1.076,54,0.016,55,0.016,71,1.65,76,2.319,96,1.407,97,1.56,101,4.186,122,0.992,132,0.271,133,0.783,135,1.164,139,3.941,140,0.846,144,1.695,146,0.783,147,0.666,148,0.783,151,1.164,152,2.458,162,1.741,171,0.992,173,1.361,182,0.916,237,1.56,274,3.56,275,2.319,276,3.063,280,3.56,291,4.212,315,2.603,321,1.172,322,1.076,332,1.172,335,1.56,339,1.407,341,1.56,342,2.007,343,2.007,388,1.56,390,1.56,391,2.007,392,2.007,394,2.319,425,2.007,454,1.56,493,4.797,494,2.007,495,3.56,496,4.249,497,3.56,498,4.704,499,3.56,500,4.249,501,4.249,502,2.396,503,3.56,504,5.027,505,2.396,506,2.396,507,2.396,508,2.396,509,2.396,510,2.396,511,4.249,512,2.396,513,2.396,514,2.396,515,2.396,516,2.396,517,3.56,518,3.56,519,2.396,520,2.007]],["title/components/EditTaskDialogComponent.html",[0,0.602,40,1.059]],["body/components/EditTaskDialogComponent.html",[0,0.69,1,0.63,2,1.248,3,0.194,4,0.17,5,0.865,6,0.865,7,0.865,8,0.865,9,0.17,11,0.865,12,2.472,13,2.277,15,1.354,17,1.354,19,0.939,20,0.031,21,0.39,22,0.194,23,0.424,27,0.736,28,1.354,29,1.354,30,0.865,31,1.888,32,0.865,33,0.752,34,0.865,35,0.583,36,0.865,37,0.63,38,0.865,39,0.865,40,1.373,41,2.472,42,1.962,43,1.354,44,0.583,45,0.865,46,0.985,47,0.912,48,0.583,49,0.865,50,0.63,51,0.681,52,0.865,53,0.865,54,0.014,55,0.014,96,1.132,97,1.254,99,3.651,114,0.797,132,0.218,133,0.663,135,0.985,140,1.065,144,1.664,146,0.63,147,0.612,148,0.63,151,1.214,154,1.463,162,1.816,171,1.888,173,1.152,182,0.736,217,0.942,233,1.474,256,1.963,262,1.03,264,1.132,266,2.841,267,2.585,275,3.149,276,2.419,290,2.701,321,2.055,322,1.888,332,0.942,338,1.408,339,1.132,388,2.736,390,2.97,394,2.419,422,1.408,423,2.715,437,1.408,438,1.408,473,1.408,521,4.697,522,1.408,523,3.112,524,2.526,525,2.715,526,3.112,527,3.52,528,4.201,529,4.201,530,1.614,531,3.821,532,2.526,533,1.926,534,1.926,535,1.926,536,1.614,537,2.526,538,1.926,539,1.926,540,1.926,541,1.771,542,1.926,543,1.614,544,1.614,545,1.614,546,2.182,547,1.408,548,2.526,549,1.926,550,2.526,551,1.926,552,1.926,553,1.926,554,1.614,555,1.614,556,1.408,557,1.408,558,2.526,559,1.926,560,1.926,561,1.926,562,1.926,563,1.926,564,1.926,565,1.926,566,1.926,567,2.526,568,3.52,569,2.526,570,2.204,571,2.526,572,2.526,573,2.526,574,1.614,575,3.112,576,1.408]],["title/interceptors/HttpRequestInterceptor.html",[72,1.456,211,2.11]],["body/interceptors/HttpRequestInterceptor.html",[3,0.273,4,0.24,9,0.24,19,1.022,20,0.031,21,0.549,22,0.502,23,1.005,33,0.79,51,0.959,54,0.018,55,0.018,71,1.755,72,2.052,73,1.328,85,2.292,87,1.328,108,1.451,111,1.595,112,1.595,113,1.595,114,1.615,119,1.22,122,2.067,129,1.908,132,0.307,135,1.493,140,0.959,143,2.774,144,1.18,146,1.275,147,0.577,148,1.275,151,0.887,160,2.826,170,1.328,181,2.085,182,1.038,185,2.376,187,1.768,190,1.451,198,1.768,212,1.984,213,1.595,214,3.865,215,1.984,216,4.024,217,2.586,218,4.024,220,3.865,221,1.984,222,3.649,223,2.852,224,2.852,225,1.984,226,1.984,227,1.984,228,2.974,229,3.338,230,1.984,231,1.984,232,1.984,233,1.908,234,1.984,235,1.768,236,1.984,237,1.768,238,1.595,239,2.852,240,1.984,241,1.984,242,1.984,243,1.984,244,2.852,245,1.984,246,1.595,247,1.984,248,1.984,249,1.984,250,3.338,251,3.338,252,3.338,253,2.852,254,1.984,255,1.984,256,1.768,257,1.984,258,1.984,259,1.984,260,1.984,577,2.274,578,2.715,579,2.715]],["title/components/LoginComponent.html",[0,0.602,44,0.98]],["body/components/LoginComponent.html",[0,0.818,1,0.833,2,1.542,3,0.256,4,0.225,5,1.145,6,1.145,7,1.145,8,1.145,9,0.225,11,1.145,12,2.657,13,2.448,15,1.674,17,1.674,19,0.9,20,0.031,21,0.516,22,0.256,23,0.561,27,0.974,28,1.674,29,1.674,30,1.145,31,2.177,32,1.145,33,0.891,34,1.145,35,0.77,36,1.145,37,0.833,38,1.145,39,1.145,40,0.833,41,1.145,42,1.332,43,1.674,44,1.466,45,1.145,46,0.833,47,0.77,48,0.77,49,1.145,50,0.833,51,1.316,52,1.145,53,1.145,54,0.017,55,0.017,71,1.682,94,1.659,114,1.055,119,1.145,122,1.055,125,4.253,126,3.507,132,0.288,133,0.82,135,1.218,140,1.316,143,2.72,144,1.559,146,0.833,147,0.471,148,0.833,151,1.218,162,1.822,173,1.424,182,1.683,209,2.37,217,1.246,233,1.822,235,1.659,270,3.156,321,1.246,322,1.145,341,1.659,420,1.862,431,1.659,435,1.862,454,1.659,457,1.862,458,2.723,459,1.862,541,2.189,580,2.134,581,4.404,582,3.725,583,3.69,584,4.404,585,2.134,586,4.06,587,3.725,588,3.121,589,2.548,590,2.548,591,3.69,592,2.548,593,2.134,594,2.548,595,2.134,596,3.121,597,2.134,598,2.548,599,3.121,600,3.121,601,2.134,602,2.134,603,2.134,604,2.134,605,2.134,606,2.548,607,3.725,608,3.725,609,3.725,610,3.725]],["title/interfaces/LoginResponse.html",[166,2.11,261,0.713]],["body/interfaces/LoginResponse.html",[3,0.426,4,0.374,9,0.374,20,0.03,22,0.426,33,1.211,54,0.024,55,0.024,132,0.48,133,1.158,147,0.778,154,2.011,166,3.426,204,3.514,207,3.514,209,2.925,261,0.933,263,1.755,611,3.552,612,2.761,613,5.981]],["title/modules/MaterialModule.html",[56,1.904,70,1.904]],["body/modules/MaterialModule.html",[3,0.252,4,0.222,9,0.222,19,1.236,20,0.031,21,0.508,22,0.252,23,0.552,54,0.017,55,0.017,58,1.342,63,1.635,70,2.165,79,2.694,282,2.103,315,1.835,331,2.103,339,1.475,614,2.51,615,3.685,616,2.51,617,3.685,618,2.51,619,3.685,620,3.685,621,2.51,622,3.685,623,2.51,624,3.685,625,2.51,626,3.685,627,2.51,628,3.685,629,2.51,630,3.685,631,2.51,632,3.685,633,2.51,634,3.685,635,2.51,636,2.51,637,3.685,638,3.685,639,3.685,640,3.685,641,3.685,642,2.51,643,3.685,644,2.51,645,3.685,646,2.51,647,3.685,648,2.51,649,3.685,650,2.51,651,3.685,652,3.685,653,2.51,654,3.685,655,2.51,656,3.685,657,2.51,658,3.685,659,2.51,660,3.685,661,2.51,662,3.685,663,2.51,664,3.685,665,2.51,666,3.685,667,3.685,668,2.51,669,3.685,670,2.51,671,3.685,672,3.685,673,3.685,674,3.685,675,2.51,676,3.685,677,2.51,678,3.685,679,2.51,680,3.685,681,2.51,682,3.685,683,2.51,684,3.685,685,2.51,686,3.685,687,2.51,688,3.685,689,2.51,690,3.685,691,2.51,692,3.685,693,2.51,694,3.685,695,2.51,696,3.685,697,2.51,698,3.685,699,2.51]],["title/components/NewTaskDialogComponent.html",[0,0.602,46,1.059]],["body/components/NewTaskDialogComponent.html",[0,0.729,1,0.687,2,1.335,3,0.211,4,0.186,5,0.944,6,0.944,7,0.944,8,0.944,9,0.186,11,0.944,12,2.532,13,2.333,15,1.449,17,1.449,19,0.817,20,0.031,21,0.425,22,0.211,23,0.462,27,0.803,28,1.449,29,1.449,30,0.944,31,1.977,32,0.944,33,0.794,34,0.944,35,0.635,36,0.944,37,0.687,38,0.944,39,0.944,40,0.687,41,0.944,42,1.959,43,1.449,44,0.635,45,0.944,46,1.439,47,1.704,48,0.635,49,0.944,50,0.687,51,0.742,52,0.944,53,0.944,54,0.015,55,0.015,96,3.31,114,0.87,132,0.238,133,0.71,135,1.054,140,1.139,144,1.669,146,0.687,147,0.634,148,0.687,151,1.054,154,1.704,162,1.577,173,0.803,182,0.803,217,1.027,233,1.577,262,2.678,264,1.234,266,2.944,267,2.678,268,1.536,275,3.263,276,2.555,290,2.788,295,1.76,321,2.152,322,1.977,338,1.536,339,1.234,388,2.866,390,3.092,394,2.1,422,1.536,423,2.868,437,1.536,438,1.536,473,1.536,522,1.536,523,3.287,524,2.701,525,2.868,526,3.287,527,3.687,530,1.76,531,3.978,532,1.76,536,1.76,537,2.701,541,1.894,543,2.701,544,1.76,545,1.76,548,1.76,550,1.76,554,1.76,555,1.76,556,1.536,557,1.536,558,1.76,567,2.701,568,3.687,569,2.701,570,2.357,571,2.701,572,2.701,573,2.701,574,1.76,575,3.287,576,1.536,700,4.721,701,2.101,702,2.101,703,2.101,704,2.101,705,2.101,706,2.101,707,2.101,708,2.101]],["title/interfaces/PatchTask.html",[261,0.713,546,1.904]],["body/interfaces/PatchTask.html",[3,0.465,4,0.409,9,0.409,20,0.029,22,0.465,54,0.025,55,0.025,132,0.524,133,1.221,147,0.702,154,1.935,261,1.018,263,1.915,265,3.382,266,3.621,267,3.294,546,3.26,547,3.382]],["title/components/RegisterComponent.html",[0,0.602,48,0.98]],["body/components/RegisterComponent.html",[0,0.795,1,0.793,2,1.488,3,0.244,4,0.214,5,1.09,6,1.09,7,1.09,8,1.09,9,0.214,11,1.09,12,2.626,13,2.42,15,1.614,17,1.614,19,0.879,20,0.031,21,0.491,22,0.244,23,0.534,27,0.927,28,1.614,29,1.614,30,1.09,31,2.126,32,1.09,33,1.109,34,1.09,35,0.734,36,1.09,37,0.793,38,1.09,39,1.09,40,0.793,41,1.09,42,1.294,43,1.614,44,0.734,45,1.09,46,0.793,47,0.734,48,1.431,49,1.09,50,0.793,51,1.27,52,1.09,53,1.09,54,0.016,55,0.016,71,1.656,94,1.579,114,1.004,119,1.09,122,1.004,126,3.741,132,0.275,133,0.791,135,1.175,140,1.27,143,2.678,144,1.6,146,0.793,147,0.541,148,0.793,151,1.175,154,1.087,162,1.757,173,1.373,182,1.636,207,2.78,209,2.314,217,1.186,233,1.757,270,3.082,321,1.757,322,1.614,341,1.579,420,1.773,431,1.579,435,1.773,454,1.579,457,1.773,458,2.627,459,1.773,525,3.129,541,2.111,556,1.773,557,1.773,570,2.627,583,3.586,585,2.032,586,3.965,588,3.01,591,3.586,593,2.032,595,2.032,596,3.965,597,2.032,599,3.01,600,3.01,601,2.032,602,2.032,603,2.032,604,2.032,605,2.032,709,2.032,710,4.28,711,3.593,712,4.28,713,5.292,714,3.593,715,2.425,716,2.425,717,2.425,718,2.425,719,2.425,720,2.425,721,2.425,722,2.425,723,2.425]],["title/interfaces/SignIn.html",[158,2.11,261,0.713]],["body/interfaces/SignIn.html",[3,0.465,4,0.409,9,0.409,20,0.029,22,0.465,54,0.025,55,0.025,132,0.524,133,1.221,147,0.702,154,1.935,158,3.613,209,3.014,261,1.018,263,1.915,270,4.013,724,3.876,725,3.876]],["title/components/TaskContentComponent.html",[0,0.602,50,1.059]],["body/components/TaskContentComponent.html",[0,0.92,1,1.031,2,1.794,3,0.317,4,0.278,5,1.417,6,1.417,7,1.417,8,1.417,9,0.278,11,1.417,12,2.781,13,2.562,15,1.947,17,1.947,19,0.805,20,0.031,21,0.638,22,0.317,23,0.694,25,2.305,26,2.305,27,1.205,28,1.947,29,1.947,30,1.417,31,2.396,32,1.417,33,0.877,34,1.417,35,0.954,36,1.417,37,1.031,38,1.417,39,1.417,40,1.031,41,1.417,42,1.919,43,1.947,44,0.954,45,1.417,46,1.031,47,0.954,48,0.954,49,1.417,50,1.743,51,1.75,52,1.417,53,1.417,54,0.02,55,0.02,104,3.168,132,0.357,144,0.954,147,0.399,171,2.05,173,1.205,332,1.542,418,3.168,426,2.642,428,2.642,429,2.642,431,2.053,433,2.642,445,2.642,448,2.642,520,2.642,576,2.305,726,3.631,727,2.642,728,4.952,729,4.334,730,4.334,731,3.153,732,4.334,733,4.334,734,4.334,735,4.334,736,3.153,737,3.153,738,3.153,739,3.153]],["title/interfaces/TaskResponse.html",[171,1.342,261,0.713]],["body/interfaces/TaskResponse.html",[3,0.407,4,0.358,9,0.358,19,0.752,20,0.03,22,0.407,42,1.225,54,0.023,55,0.023,132,0.459,133,1.125,147,0.784,154,2.001,171,2.117,204,3.457,261,0.891,263,1.677,266,3.457,267,3.145,268,4.301,332,1.981,333,3.832,334,3.951,612,2.638,740,5.884]],["title/injectables/TaskService.html",[129,1.239,290,1.732]],["body/injectables/TaskService.html",[3,0.261,4,0.23,9,0.23,14,1.694,19,1.065,20,0.031,21,0.526,22,0.261,23,0.572,33,1.098,42,1.348,47,1.572,54,0.017,55,0.017,87,1.272,129,1.446,130,1.694,132,0.295,135,1.236,140,0.919,141,1.901,142,3.577,144,1.641,146,1.773,147,0.74,148,1.773,149,2.765,151,1.699,154,1.841,160,3.126,168,3.577,170,1.272,171,1.077,172,2.179,173,0.994,174,1.528,175,1.901,179,2.179,180,1.901,181,1.39,185,2.336,190,2.779,192,3.734,199,2.179,204,2.875,246,3.055,262,2.779,290,2.022,334,3.187,336,2.875,546,3.436,741,2.179,742,3.782,743,3.782,744,3.782,745,3.782,746,2.601,747,3.782,748,2.601,749,3.782,750,2.601,751,3.782,752,2.601,753,3.782,754,2.601,755,3.782,756,2.601,757,2.601,758,2.601,759,2.601,760,2.601,761,3.169,762,3.782,763,2.601,764,2.601,765,4.457,766,4.457,767,2.601,768,2.601,769,2.601,770,2.601,771,2.601]],["title/interceptors/TokenInterceptor.html",[73,1.585,211,2.11]],["body/interceptors/TokenInterceptor.html",[3,0.275,4,0.242,9,0.242,19,1.025,20,0.031,21,0.554,22,0.504,23,1.009,33,0.794,51,0.967,54,0.018,55,0.018,71,1.759,72,1.763,73,1.919,85,2.305,87,1.338,108,1.462,111,1.608,112,1.608,113,1.608,114,1.624,119,1.229,122,2.074,129,1.915,132,0.31,135,1.499,140,0.967,143,2.243,144,1.187,146,1.282,147,0.58,148,1.282,151,0.894,160,2.835,170,1.338,181,2.097,182,1.046,185,2.383,187,1.782,190,1.462,198,1.782,212,2,213,1.608,214,3.877,215,2,216,4.035,217,2.594,218,4.035,220,3.877,221,2,222,3.662,223,2.868,224,2.868,225,2,226,2,227,2,228,2.987,229,3.353,230,2,231,2,232,2,233,1.919,234,2,235,1.782,236,2,237,1.782,238,1.608,239,2.868,240,2,241,2,242,2,243,2,244,2.868,245,2,246,1.608,247,2,248,2,249,2,250,3.353,251,3.353,252,3.353,253,2.868,254,2,255,2,256,1.782,257,2,258,2,259,2,260,2,577,2.293,772,2.736,773,2.736]],["title/interfaces/UpdateTaskStatus.html",[261,0.713,336,1.904]],["body/interfaces/UpdateTaskStatus.html",[3,0.468,4,0.411,9,0.411,19,0.865,20,0.03,22,0.468,42,1.685,54,0.025,55,0.025,132,0.527,133,1.226,147,0.589,261,1.025,263,1.928,333,4.022,334,4.112,336,3.273,337,3.405,774,3.405]],["title/interfaces/UserResponse.html",[152,1.585,261,0.713]],["body/interfaces/UserResponse.html",[3,0.438,4,0.385,9,0.385,20,0.029,22,0.438,33,1.223,54,0.024,55,0.024,132,0.494,133,1.178,147,0.764,152,2.618,154,1.998,204,3.549,207,3.549,209,2.954,261,0.96,263,1.805,335,2.84,612,2.84]],["title/injectables/UserService.html",[129,1.239,775,2.369]],["body/injectables/UserService.html",[3,0.399,4,0.35,9,0.35,14,2.584,19,1.12,20,0.031,21,0.803,22,0.399,23,0.873,33,0.803,47,1.2,54,0.023,55,0.023,87,1.941,129,1.929,130,2.584,132,0.449,135,1.65,140,1.402,141,2.901,142,4.269,144,1.526,146,1.297,147,0.502,148,1.297,149,3.689,151,1.297,152,1.941,160,2.966,168,2.901,170,1.941,173,1.517,174,2.331,175,2.901,178,3.325,180,2.901,181,2.121,185,1.783,190,2.121,246,2.331,761,3.325,775,3.689,776,3.325,777,5.84,778,3.968,779,3.968,780,3.968]],["title/coverage.html",[781,3.7]],["body/coverage.html",[0,1.11,1,0.996,9,0.269,10,2.553,20,0.03,35,0.922,37,0.996,40,0.996,42,1.67,44,0.922,46,0.996,47,0.922,48,0.922,50,0.996,54,0.019,55,0.019,71,0.922,72,1.369,73,1.49,96,1.791,99,1.985,101,2.228,104,2.228,108,1.629,120,2.228,129,1.859,131,2.553,147,0.385,152,1.49,158,1.985,164,1.985,166,1.985,171,1.262,174,2.487,211,3.168,213,3.088,238,1.791,261,1.315,262,1.629,264,2.487,265,3.095,269,2.553,271,2.553,290,1.629,332,1.49,335,1.985,336,1.791,337,2.228,418,4.829,493,2.553,494,2.553,521,2.553,522,3.095,546,1.791,547,2.228,580,2.553,611,2.553,612,3.168,700,2.553,709,2.553,724,2.553,725,2.553,726,2.553,727,2.553,741,2.553,774,2.228,775,2.228,776,2.553,781,2.553,782,3.048,783,3.048,784,3.048,785,5.523,786,3.048,787,3.048,788,3.048,789,4.233,790,4.864,791,4.864,792,4.233,793,2.553,794,5.256,795,3.048,796,4.233,797,5.523,798,2.553,799,2.553,800,3.048,801,3.048]],["title/dependencies.html",[59,2.537,802,1.981]],["body/dependencies.html",[20,0.031,21,0.906,54,0.025,55,0.025,59,2.914,81,4.556,82,3.975,94,2.914,119,2.011,170,2.189,803,4.475,804,6.485,805,4.475,806,5.438,807,4.475,808,4.475,809,4.475,810,4.475,811,4.475,812,4.475,813,4.475,814,4.475,815,4.475]],["title/miscellaneous/enumerations.html",[816,1.765,817,3.264]],["body/miscellaneous/enumerations.html",[20,0.029,54,0.026,55,0.026,132,0.548,277,4.775,322,2.722,332,2.367,333,3.711,774,4.166,816,3.152,817,4.055,818,4.84,819,4.84,820,5.699]],["title/index.html",[132,0.307,821,2.71,822,2.71]],["body/index.html",[0,1.003,4,0.331,20,0.022,33,0.759,47,1.134,54,0.022,55,0.022,76,2.442,228,2.442,802,2.741,823,3.75,824,4.867,825,3.75,826,5.403,827,5.403,828,3.142,829,3.75,830,3.75,831,4.867,832,5.925,833,6.181,834,3.75,835,3.75,836,3.75,837,3.75,838,3.75,839,3.75,840,3.75,841,3.75,842,3.75,843,3.75,844,3.75,845,5.403,846,5.403,847,3.75,848,5.718,849,3.75,850,3.75,851,3.75,852,3.75,853,4.867,854,4.867,855,5.718,856,3.75,857,4.867,858,4.867,859,3.75,860,6.072,861,3.75,862,3.75,863,3.75,864,4.867,865,3.75,866,3.75,867,3.75,868,3.75,869,3.75,870,3.75,871,5.403,872,3.75,873,3.75,874,3.75,875,2.741,876,3.75,877,3.75]],["title/modules.html",[58,2.36]],["body/modules.html",[20,0.026,54,0.026,55,0.026,57,3.22,58,2.643,69,2.905,70,2.905,82,3.615,878,4.945,879,4.945,880,6.112,881,5.771,882,5.771]],["title/overview.html",[875,3.228]],["body/overview.html",[1,2.006,2,1.507,20,0.03,27,1.391,35,1.611,37,1.741,40,1.741,44,1.611,46,1.741,48,1.611,50,1.741,54,0.022,55,0.022,56,2.139,57,4.376,58,1.946,59,2.371,60,3.05,61,3.05,62,3.05,63,2.371,64,3.05,65,3.05,66,3.05,67,3.05,68,3.05,69,3.129,70,3.129,71,1.611,72,2.393,73,2.605,74,3.999,75,3.05,76,2.371,118,2.371,130,2.371,263,1.507,875,2.661,883,4.773,884,4.773,885,3.64]],["title/properties.html",[133,0.857,802,1.981]],["body/properties.html",[20,0.028,54,0.027,55,0.027,133,1.129,828,4.298,886,5.13]],["title/routes.html",[118,2.876]],["body/routes.html",[20,0.027,54,0.027,55,0.027,118,3.379]],["title/miscellaneous/variables.html",[816,1.765,887,3.264]],["body/miscellaneous/variables.html",[20,0.031,54,0.023,55,0.023,71,1.493,72,1.723,85,2.253,111,2.253,112,2.253,113,2.253,114,2.261,120,3.609,122,2.044,132,0.434,143,2.414,147,0.729,156,3.213,174,3.388,185,2.218,213,2.253,238,2.901,321,2.82,322,2.591,541,2.253,793,3.213,798,3.213,799,3.213,816,2.497,887,3.213,888,3.834,889,3.834,890,3.834,891,3.834,892,3.834,893,3.834,894,3.834,895,3.834,896,3.834,897,3.834,898,3.834,899,3.834,900,3.834,901,3.834,902,4.937,903,4.937,904,4.937,905,4.937]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":886,"title":{},"body":{"properties.html":{}}}],["0.12",{"_index":478,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.13.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["0.14",{"_index":476,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.2",{"_index":474,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.87",{"_index":453,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0/1",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["100",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["10px",{"_index":450,"title":{},"body":{"components/DashboardComponent.html":{}}}],["14px",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{}}}],["16.0.0",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":829,"title":{},"body":{"index.html":{}}}],["16.2.14",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":439,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2.3.0",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":449,"title":{},"body":{"components/DashboardComponent.html":{}}}],["250ms",{"_index":484,"title":{},"body":{"components/DashboardComponent.html":{}}}],["25px",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2px",{"_index":477,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3",{"_index":883,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":473,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["4",{"_index":885,"title":{},"body":{"overview.html":{}}}],["400px",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{}}}],["401",{"_index":236,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["4px",{"_index":444,"title":{},"body":{"components/DashboardComponent.html":{}}}],["5",{"_index":569,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["5px",{"_index":472,"title":{},"body":{"components/DashboardComponent.html":{}}}],["60",{"_index":567,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["60px",{"_index":441,"title":{},"body":{"components/DashboardComponent.html":{}}}],["7.8.0",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":737,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["8",{"_index":884,"title":{},"body":{"overview.html":{}}}],["8px",{"_index":475,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a11ymodule",{"_index":615,"title":{},"body":{"modules/MaterialModule.html":{}}}],["accept",{"_index":259,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["access",{"_index":250,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["access_token",{"_index":613,"title":{},"body":{"interfaces/LoginResponse.html":{}}}],["activatedroutesnapshot",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual_component",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["add",{"_index":867,"title":{},"body":{"index.html":{}}}],["addnewtask",{"_index":281,"title":{},"body":{"components/DashboardComponent.html":{}}}],["addnewtask(newtask",{"_index":293,"title":{},"body":{"components/DashboardComponent.html":{}}}],["align",{"_index":435,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["allow",{"_index":252,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular",{"_index":826,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":616,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/clipboard",{"_index":618,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":331,"title":{},"body":{"components/DashboardComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":621,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":623,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":625,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":627,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":629,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":631,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/badge",{"_index":633,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":635,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":638,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":642,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":644,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":646,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":668,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":650,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":339,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{}}}],["angular/material/divider",{"_index":653,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":655,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":657,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":659,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":661,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":663,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":665,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":670,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":672,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":677,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":679,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":681,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slide",{"_index":685,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":683,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":687,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":689,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":648,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":691,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":693,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":695,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":697,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":699,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["animating",{"_index":481,"title":{},"body":{"components/DashboardComponent.html":{}}}],["apibaseurl",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["app.component",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":838,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["appmodule",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":69,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":312,"title":{},"body":{"components/DashboardComponent.html":{}}}],["array.indexof(item",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{}}}],["array.splice(index",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{}}}],["artifacts",{"_index":849,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":227,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["authenticationguard",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":245,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["authreq",{"_index":243,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["authservice",{"_index":71,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authservice.getcurrentuser",{"_index":343,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["authservice.isauthenticated",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":520,"title":{},"body":{"components/DashboardToolbarComponent.html":{},"components/TaskContentComponent.html":{}}}],["automatically",{"_index":839,"title":{},"body":{"index.html":{}}}],["available",{"_index":882,"title":{},"body":{"modules.html":{}}}],["awesome",{"_index":517,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["awesome_todo",{"_index":325,"title":{},"body":{"components/DashboardComponent.html":{}}}],["awesometodolist",{"_index":823,"title":{},"body":{"index.html":{}}}],["b",{"_index":317,"title":{},"body":{"components/DashboardComponent.html":{}}}],["b71c1c",{"_index":575,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["back",{"_index":713,"title":{},"body":{"components/RegisterComponent.html":{}}}],["background",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["bar",{"_index":673,"title":{},"body":{"modules/MaterialModule.html":{}}}],["bearer",{"_index":246,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["between",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bezier(0",{"_index":486,"title":{},"body":{"components/DashboardComponent.html":{}}}],["block",{"_index":433,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["body",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":437,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["borrar",{"_index":563,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["bottom",{"_index":451,"title":{},"body":{"components/DashboardComponent.html":{}}}],["box",{"_index":447,"title":{},"body":{"components/DashboardComponent.html":{}}}],["box:last",{"_index":487,"title":{},"body":{"components/DashboardComponent.html":{}}}],["box:not(.cdk",{"_index":492,"title":{},"body":{"components/DashboardComponent.html":{}}}],["browse",{"_index":880,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":848,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":571,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["capabilities",{"_index":869,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":225,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["catcherror((error",{"_index":232,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["ccc",{"_index":440,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cdk",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cdkdragdrop",{"_index":297,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cdksteppermodule",{"_index":624,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":626,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":628,"title":{},"body":{"modules/MaterialModule.html":{}}}],["center",{"_index":458,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":841,"title":{},"body":{"index.html":{}}}],["changestatus",{"_index":742,"title":{},"body":{"injectables/TaskService.html":{}}}],["changestatus(id",{"_index":747,"title":{},"body":{"injectables/TaskService.html":{}}}],["changestatus(movedtask.id",{"_index":362,"title":{},"body":{"components/DashboardComponent.html":{}}}],["changeuserevent",{"_index":500,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["characters",{"_index":568,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["check",{"_index":874,"title":{},"body":{"index.html":{}}}],["child",{"_index":488,"title":{},"body":{"components/DashboardComponent.html":{}}}],["choice",{"_index":863,"title":{},"body":{"index.html":{}}}],["class",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":827,"title":{},"body":{"index.html":{}}}],["clipboardmodule",{"_index":617,"title":{},"body":{"modules/MaterialModule.html":{}}}],["closewithoutdata",{"_index":527,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["cluster_appmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":843,"title":{},"body":{"index.html":{}}}],["color",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["command",{"_index":864,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"overview.html":{}}}],["components/dialogs/edit",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dialogs/new",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["components/pages/dashboard/dashboard.component",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/pages/login/login.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/pages/register/register.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/task",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["components/toolbars/dashboard",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm('¿estás",{"_index":559,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["const",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":577,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(dialog",{"_index":502,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["constructor(dialogref",{"_index":530,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["constructor(fb",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":513,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["constructor(taskservice",{"_index":289,"title":{},"body":{"components/DashboardComponent.html":{}}}],["container",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["content",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["content.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["content.component.css",{"_index":728,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["content.component.html",{"_index":729,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["content.component.ts",{"_index":727,"title":{},"body":{"components/TaskContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:10",{"_index":731,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["content/task",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"components/TaskContentComponent.html":{},"coverage.html":{}}}],["contraseña",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["control",{"_index":251,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["corsinterceptor",{"_index":108,"title":{"interceptors/CorsInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["coverage",{"_index":781,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createtask",{"_index":262,"title":{"interfaces/CreateTask.html":{}},"body":{"interfaces/CreateTask.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":164,"title":{"interfaces/CreateUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CreateUser.html":{},"coverage.html":{}}}],["creationdate",{"_index":740,"title":{},"body":{"interfaces/TaskResponse.html":{}}}],["cubic",{"_index":485,"title":{},"body":{"components/DashboardComponent.html":{}}}],["current_user",{"_index":274,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["cursor",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["dashboard'},{'name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["dashboard.component.css",{"_index":272,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":273,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":35,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardtoolbarcomponent",{"_index":37,"title":{"components/DashboardToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["data.description",{"_index":551,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["data.title",{"_index":549,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["date",{"_index":307,"title":{},"body":{"components/DashboardComponent.html":{}}}],["date(year",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datea",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datea.gettime",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dateb",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dateb.gettime",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datepart",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datepart.split('/').map(number",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datestring",{"_index":306,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datestring.split",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["day",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{}}}],["de",{"_index":561,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["declarations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":536,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["default",{"_index":321,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":256,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["deletetask",{"_index":743,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":749,"title":{},"body":{"injectables/TaskService.html":{}}}],["dependencies",{"_index":59,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":266,"title":{},"body":{"interfaces/CreateTask.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"interfaces/TaskResponse.html":{}}}],["dev",{"_index":835,"title":{},"body":{"index.html":{}}}],["development",{"_index":830,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":276,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["dialog'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["dialog.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{}}}],["dialog.component.css",{"_index":523,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["dialog.component.html",{"_index":524,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts",{"_index":522,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:12",{"_index":706,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":704,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":705,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":543,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":539,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":542,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":532,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":703,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":540,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":538,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":702,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":534,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":701,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["dialog.component.ts:45",{"_index":533,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":535,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["dialog/edit",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"coverage.html":{}}}],["dialog/new",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["dialogs/edit",{"_index":340,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dialogs/new",{"_index":512,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["direction",{"_index":455,"title":{},"body":{"components/DashboardComponent.html":{}}}],["directive",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["directives",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":847,"title":{},"body":{"index.html":{}}}],["directory",{"_index":852,"title":{},"body":{"index.html":{}}}],["display",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["dist",{"_index":851,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["done",{"_index":277,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["drag",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dragdropmodule",{"_index":619,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dragging",{"_index":491,"title":{},"body":{"components/DashboardComponent.html":{}}}],["drop",{"_index":282,"title":{},"body":{"components/DashboardComponent.html":{},"modules/MaterialModule.html":{}}}],["drop(event",{"_index":296,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dynamic",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":861,"title":{},"body":{"index.html":{}}}],["edit",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["edittask",{"_index":528,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["edittaskdialogcomponent",{"_index":40,"title":{"components/EditTaskDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["element.status",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{}}}],["email",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUser.html":{},"interfaces/LoginResponse.html":{},"components/RegisterComponent.html":{},"interfaces/UserResponse.html":{}}}],["end",{"_index":860,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":817,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl}/task",{"_index":767,"title":{},"body":{"injectables/TaskService.html":{}}}],["environment.apibaseurl}/task/${id",{"_index":769,"title":{},"body":{"injectables/TaskService.html":{}}}],["environment.apibaseurl}/task/status/${id",{"_index":763,"title":{},"body":{"injectables/TaskService.html":{}}}],["environment.apibaseurl}/task/user/${id",{"_index":760,"title":{},"body":{"injectables/TaskService.html":{}}}],["environment.apibaseurl}/user",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apibaseurl}/user/login",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":233,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["error.error.message",{"_index":557,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["error.status",{"_index":235,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["errormessages",{"_index":525,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["esta",{"_index":564,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["event",{"_index":299,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.container",{"_index":349,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.container.data",{"_index":350,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.currentindex",{"_index":352,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.item.data",{"_index":346,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.previouscontainer",{"_index":348,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.previouscontainer.data",{"_index":353,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.previousindex",{"_index":351,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eventemitter",{"_index":504,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["example",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["execute",{"_index":857,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["false",{"_index":541,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ffcccb",{"_index":574,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":842,"title":{},"body":{"index.html":{}}}],["first",{"_index":866,"title":{},"body":{"index.html":{}}}],["flex",{"_index":454,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["font",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{}}}],["foreach((element",{"_index":382,"title":{},"body":{"components/DashboardComponent.html":{}}}],["formbuilder",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formerror",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":870,"title":{},"body":{"index.html":{}}}],["generate",{"_index":845,"title":{},"body":{"index.html":{}}}],["generated",{"_index":825,"title":{},"body":{"index.html":{}}}],["getallusers",{"_index":777,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuser",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettasksbyuser",{"_index":744,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasksbyuser(id",{"_index":751,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasksbyuser(this.current_user.id",{"_index":380,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getting",{"_index":821,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusertasks",{"_index":283,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getusertasks(user",{"_index":300,"title":{},"body":{"components/DashboardComponent.html":{}}}],["go",{"_index":873,"title":{},"body":{"index.html":{}}}],["graph",{"_index":881,"title":{},"body":{"modules.html":{}}}],["guards/authentication.guard",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["headers",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["height",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["help",{"_index":871,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":446,"title":{},"body":{"components/DashboardComponent.html":{}}}],["host",{"_index":739,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["hours",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["http",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":837,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":254,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["http_interceptors",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":223,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpevent",{"_index":221,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":218,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["httpheaders().set('authorization",{"_index":761,"title":{},"body":{"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["httpheaders().set('content",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpinterceptor",{"_index":222,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpinterceptorproviders",{"_index":238,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httprequest",{"_index":216,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httprequestinterceptor",{"_index":72,"title":{"interceptors/HttpRequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginResponse.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interfaces/UserResponse.html":{}}}],["identifier",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":228,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["in.ts",{"_index":725,"title":{},"body":{"interfaces/SignIn.html":{},"coverage.html":{}}}],["in_progress",{"_index":820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incorrecto",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":132,"title":{"index.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":544,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["inject(authservice",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(mat_dialog_data",{"_index":537,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["inject(router",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":129,"title":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inprogress",{"_index":278,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":732,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["inputs",{"_index":730,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["instanceof",{"_index":234,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept",{"_index":214,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(req",{"_index":215,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":211,"title":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":212,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":261,"title":{"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"interfaces/LoginResponse.html":{},"interfaces/PatchTask.html":{},"interfaces/SignIn.html":{},"interfaces/TaskResponse.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{}},"body":{"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"interfaces/LoginResponse.html":{},"interfaces/PatchTask.html":{},"interfaces/SignIn.html":{},"interfaces/TaskResponse.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":263,"title":{},"body":{"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"interfaces/LoginResponse.html":{},"interfaces/PatchTask.html":{},"interfaces/SignIn.html":{},"interfaces/TaskResponse.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"overview.html":{}}}],["interfaces/create",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["interfaces/login",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces/patch",{"_index":758,"title":{},"body":{"injectables/TaskService.html":{}}}],["interfaces/sign",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces/task",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["interfaces/update",{"_index":757,"title":{},"body":{"injectables/TaskService.html":{}}}],["interfaces/user",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":310,"title":{},"body":{"components/DashboardComponent.html":{}}}],["items",{"_index":457,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(createtask",{"_index":768,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(login",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(patchtask",{"_index":770,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(register",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(status",{"_index":764,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(user",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["karma",{"_index":859,"title":{},"body":{"index.html":{}}}],["legend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"overview.html":{}}}],["list",{"_index":315,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"modules/MaterialModule.html":{}}}],["list.cdk",{"_index":490,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list.findindex((list_task",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list.push(task",{"_index":376,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list[index",{"_index":375,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list_task.id",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{}}}],["localstorage.removeitem('user",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":518,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["login",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["login(login",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":44,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginresponse",{"_index":166,"title":{"interfaces/LoginResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginResponse.html":{},"coverage.html":{}}}],["logout",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardToolbarComponent.html":{}}}],["margin",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["mat_dialog_data",{"_index":545,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["matautocompletemodule",{"_index":630,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":632,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":634,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":637,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":639,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":641,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":643,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":645,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":649,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":291,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["matdialogmodule",{"_index":651,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":531,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["matdividermodule",{"_index":652,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materialmodule",{"_index":70,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":654,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":656,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":658,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":660,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":662,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":664,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":666,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":669,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":671,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":674,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":676,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":667,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":678,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":680,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":682,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":684,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":686,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":688,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":647,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":690,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":692,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":694,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":696,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":698,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["message",{"_index":570,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["methods",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["min",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minutes",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":816,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modifiedreq",{"_index":249,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["module",{"_index":56,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/material.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{}}}],["more",{"_index":872,"title":{},"body":{"index.html":{}}}],["move",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{}}}],["movedtask",{"_index":345,"title":{},"body":{"components/DashboardComponent.html":{}}}],["moveiteminarray",{"_index":329,"title":{},"body":{"components/DashboardComponent.html":{}}}],["multi",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navigate",{"_index":836,"title":{},"body":{"index.html":{}}}],["need",{"_index":865,"title":{},"body":{"index.html":{}}}],["new",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newstatus",{"_index":347,"title":{},"body":{"components/DashboardComponent.html":{}}}],["newtask",{"_index":295,"title":{},"body":{"components/DashboardComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["newtaskdialogcomponent",{"_index":46,"title":{"components/NewTaskDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newtaskevent",{"_index":501,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["next",{"_index":217,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(authreq",{"_index":247,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(modifiedreq",{"_index":260,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(req",{"_index":248,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":231,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":833,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["none",{"_index":489,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{}}}],["number",{"_index":319,"title":{},"body":{"components/DashboardComponent.html":{}}}],["o",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["object",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["ok",{"_index":572,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["opacity",{"_index":480,"title":{},"body":{"components/DashboardComponent.html":{}}}],["openconfirm",{"_index":529,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["opendialogedittask",{"_index":284,"title":{},"body":{"components/DashboardComponent.html":{}}}],["opendialogedittask(task",{"_index":302,"title":{},"body":{"components/DashboardComponent.html":{}}}],["opendialognewtask",{"_index":498,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["optional",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["origin",{"_index":253,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["out",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardToolbarComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":511,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["outputs",{"_index":499,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["overflow",{"_index":445,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["overview",{"_index":875,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":802,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":448,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["page",{"_index":877,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["parsedatestring",{"_index":285,"title":{},"body":{"components/DashboardComponent.html":{}}}],["parsedatestring(datestring",{"_index":304,"title":{},"body":{"components/DashboardComponent.html":{}}}],["password",{"_index":270,"title":{},"body":{"interfaces/CreateUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{}}}],["patchtask",{"_index":546,"title":{"interfaces/PatchTask.html":{}},"body":{"components/EditTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["patchtask(id",{"_index":753,"title":{},"body":{"injectables/TaskService.html":{}}}],["patchtask).subscribe",{"_index":553,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["path",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["placeholder",{"_index":479,"title":{},"body":{"components/DashboardComponent.html":{}}}],["platform",{"_index":862,"title":{},"body":{"index.html":{}}}],["portalmodule",{"_index":620,"title":{},"body":{"modules/MaterialModule.html":{}}}],["post",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["posttask",{"_index":745,"title":{},"body":{"injectables/TaskService.html":{}}}],["posttask(createtask",{"_index":755,"title":{},"body":{"injectables/TaskService.html":{}}}],["preview",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{}}}],["private",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["production",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{}}}],["project",{"_index":824,"title":{},"body":{"index.html":{}}}],["properties",{"_index":133,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"interfaces/TaskResponse.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"properties.html":{}}}],["provide",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":275,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["put",{"_index":255,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["querer",{"_index":562,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["radius",{"_index":443,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["redirectto",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":876,"title":{},"body":{"index.html":{}}}],["register",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["register(register",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.css",{"_index":710,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":711,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":48,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":712,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":840,"title":{},"body":{"index.html":{}}}],["removeitemonce",{"_index":286,"title":{},"body":{"components/DashboardComponent.html":{}}}],["removeitemonce(array",{"_index":308,"title":{},"body":{"components/DashboardComponent.html":{}}}],["replacetask",{"_index":287,"title":{},"body":{"components/DashboardComponent.html":{}}}],["replacetask(list",{"_index":313,"title":{},"body":{"components/DashboardComponent.html":{}}}],["req",{"_index":220,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.clone",{"_index":229,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.headers.has('authorization",{"_index":241,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.url.includes('download",{"_index":242,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["requested",{"_index":258,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["reset",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["response.status",{"_index":364,"title":{},"body":{"components/DashboardComponent.html":{}}}],["response.ts",{"_index":612,"title":{},"body":{"interfaces/LoginResponse.html":{},"interfaces/TaskResponse.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["result",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["result.status",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{}}}],["results",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["rgba(0",{"_index":452,"title":{},"body":{"components/DashboardComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["route",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["router.parseurl('login",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":118,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":456,"title":{},"body":{"components/DashboardComponent.html":{}}}],["run",{"_index":832,"title":{},"body":{"index.html":{}}}],["running",{"_index":853,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":226,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["scaffolding",{"_index":844,"title":{},"body":{"index.html":{}}}],["scrollable",{"_index":736,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["scrollingmodule",{"_index":622,"title":{},"body":{"modules/MaterialModule.html":{}}}],["seconds",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{}}}],["seguro",{"_index":560,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["serve",{"_index":834,"title":{},"body":{"index.html":{}}}],["server",{"_index":831,"title":{},"body":{"index.html":{}}}],["services/auth.interceptor",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["services/auth.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["set('authorization",{"_index":765,"title":{},"body":{"injectables/TaskService.html":{}}}],["set('content",{"_index":766,"title":{},"body":{"injectables/TaskService.html":{}}}],["setheaders",{"_index":244,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["shadow",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sheet",{"_index":636,"title":{},"body":{"modules/MaterialModule.html":{}}}],["signin",{"_index":158,"title":{"interfaces/SignIn.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SignIn.html":{},"coverage.html":{}}}],["size",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sizing",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solid",{"_index":438,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["sort((a",{"_index":381,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sortdate",{"_index":288,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sortdate(a",{"_index":316,"title":{},"body":{"components/DashboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"modules/MaterialModule.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{}}}],["spacer",{"_index":519,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["spinner",{"_index":675,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../auth.interceptor.ts",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.guard.ts",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/dialogs/edit",{"_index":521,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/dialogs/new",{"_index":700,"title":{},"body":{"components/NewTaskDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts",{"_index":271,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:118",{"_index":294,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:122",{"_index":303,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:144",{"_index":311,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:152",{"_index":305,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:162",{"_index":318,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:22",{"_index":327,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:24",{"_index":323,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:26",{"_index":324,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:28",{"_index":326,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:30",{"_index":328,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:32",{"_index":292,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:36",{"_index":320,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:43",{"_index":298,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:85",{"_index":314,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/dashboard/dashboard.component.ts:94",{"_index":301,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/pages/login/login.component.ts",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/pages/login/login.component.ts:12",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/pages/login/login.component.ts:13",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/pages/login/login.component.ts:26",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/pages/login/login.component.ts:49",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/pages/register/register.component.ts",{"_index":709,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/pages/register/register.component.ts:12",{"_index":718,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/pages/register/register.component.ts:13",{"_index":717,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/pages/register/register.component.ts:14",{"_index":714,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/pages/register/register.component.ts:29",{"_index":716,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/pages/register/register.component.ts:53",{"_index":715,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/task",{"_index":726,"title":{},"body":{"components/TaskContentComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbars/dashboard",{"_index":493,"title":{},"body":{"components/DashboardToolbarComponent.html":{},"coverage.html":{}}}],["src/app/guards/authentication.guard.ts",{"_index":793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/create",{"_index":264,"title":{},"body":{"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/login",{"_index":611,"title":{},"body":{"interfaces/LoginResponse.html":{},"coverage.html":{}}}],["src/app/interfaces/patch",{"_index":547,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"coverage.html":{}}}],["src/app/interfaces/sign",{"_index":724,"title":{},"body":{"interfaces/SignIn.html":{},"coverage.html":{}}}],["src/app/interfaces/task",{"_index":332,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/update",{"_index":337,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/UpdateTaskStatus.html":{},"coverage.html":{}}}],["src/app/interfaces/user",{"_index":335,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["src/app/modules/material.module.ts",{"_index":614,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/auth.interceptor.ts",{"_index":213,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.interceptor.ts:17",{"_index":578,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["src/app/services/auth.interceptor.ts:20",{"_index":579,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["src/app/services/auth.interceptor.ts:44",{"_index":772,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/services/auth.interceptor.ts:47",{"_index":773,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/services/auth.interceptor.ts:69",{"_index":219,"title":{},"body":{"interceptors/CorsInterceptor.html":{}}}],["src/app/services/auth.service",{"_index":341,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:22",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:39",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:45",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:55",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:59",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/task.service",{"_index":338,"title":{},"body":{"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["src/app/services/task.service.ts",{"_index":741,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:13",{"_index":746,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:16",{"_index":752,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:25",{"_index":748,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:37",{"_index":756,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:49",{"_index":754,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:61",{"_index":750,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/user.service.ts",{"_index":776,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:10",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:13",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.development.ts",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":822,"title":{"index.html":{}},"body":{}}],["state",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":334,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskStatus.html":{}}}],["status.ts",{"_index":774,"title":{},"body":{"interfaces/UpdateTaskStatus.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["steelblue",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{}}}],["stored",{"_index":850,"title":{},"body":{"index.html":{}}}],["string",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"interfaces/LoginResponse.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interfaces/UserResponse.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["subscribe",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((response",{"_index":363,"title":{},"body":{"components/DashboardComponent.html":{}}}],["support",{"_index":878,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":879,"title":{},"body":{"modules.html":{}}}],["t",{"_index":309,"title":{},"body":{"components/DashboardComponent.html":{}}}],["table",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((user",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["tarea",{"_index":565,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["task",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskStatus.html":{},"coverage.html":{}}}],["task.creationdate",{"_index":734,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["task.description",{"_index":735,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["task.id",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{}}}],["task.title",{"_index":733,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["task.ts",{"_index":265,"title":{},"body":{"interfaces/CreateTask.html":{},"interfaces/PatchTask.html":{},"coverage.html":{}}}],["taskcontentcomponent",{"_index":50,"title":{"components/TaskContentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskerror",{"_index":526,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["taskresponse",{"_index":171,"title":{"interfaces/TaskResponse.html":{}},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["taskservice",{"_index":290,"title":{"injectables/TaskService.html":{}},"body":{"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["taskstatus",{"_index":333,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/TaskResponse.html":{},"interfaces/UpdateTaskStatus.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.done",{"_index":359,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskstatus.in_progress",{"_index":357,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskstatus.to_do",{"_index":355,"title":{},"body":{"components/DashboardComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["test",{"_index":856,"title":{},"body":{"index.html":{}}}],["testing",{"_index":868,"title":{},"body":{"index.html":{}}}],["tests",{"_index":855,"title":{},"body":{"index.html":{}}}],["text",{"_index":576,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/TaskContentComponent.html":{}}}],["this.authservice",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.gettoken",{"_index":240,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["this.authservice.logout",{"_index":237,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"components/DashboardToolbarComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["this.authservice.user",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.current_user",{"_index":342,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["this.current_user.id",{"_index":515,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["this.data",{"_index":707,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["this.description",{"_index":550,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["this.dialog.open(edittaskdialogcomponent",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dialog.open(newtaskdialogcomponent",{"_index":514,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":558,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["this.dialogref.close(response",{"_index":554,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["this.done",{"_index":379,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.done.includes(movedtask",{"_index":358,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.done.push(element",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.done.sort((a",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.errormessages",{"_index":556,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formerror",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getusertasks(this.current_user",{"_index":344,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${environment.apibaseurl}/task/${id",{"_index":771,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get",{"_index":759,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get(`${environment.apibaseurl}/user",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.patch",{"_index":762,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.post",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["this.inprogress",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.inprogress.includes(movedtask",{"_index":356,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.inprogress.push(element",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.inprogress.sort((a",{"_index":370,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.loginform",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.newtaskevent.emit(result",{"_index":516,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["this.parsedatestring(a.creationdate",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.parsedatestring(b.creationdate",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.registerform",{"_index":719,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":720,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.removeitemonce(this.done",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.removeitemonce(this.inprogress",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.removeitemonce(this.todo",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.replacetask(this.done",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.replacetask(this.inprogress",{"_index":366,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.replacetask(this.todo",{"_index":365,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.router.navigate",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/login",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["this.router.navigate(['login",{"_index":723,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['register",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.sortdate(a",{"_index":369,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.taskerror",{"_index":555,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["this.taskservice",{"_index":361,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.taskservice.deletetask(this.data.id).subscribe",{"_index":566,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["this.taskservice.patchtask(this.data.id",{"_index":552,"title":{},"body":{"components/EditTaskDialogComponent.html":{}}}],["this.taskservice.posttask(newtask).subscribe",{"_index":708,"title":{},"body":{"components/NewTaskDialogComponent.html":{}}}],["this.title",{"_index":548,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["this.todo",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.todo.includes(movedtask",{"_index":354,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.todo.push(element",{"_index":384,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.todo.push(newtask",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.todo.sort((a",{"_index":368,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.user",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user!.email",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user!.id",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user!.name",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user!.username",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.access_token",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror",{"_index":224,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["timepart",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["timepart.split(':').map(number",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["title",{"_index":267,"title":{},"body":{"interfaces/CreateTask.html":{},"components/DashboardComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"interfaces/TaskResponse.html":{}}}],["to_do",{"_index":819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["todo",{"_index":279,"title":{},"body":{"components/DashboardComponent.html":{}}}],["toggle",{"_index":640,"title":{},"body":{"modules/MaterialModule.html":{}}}],["token",{"_index":239,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["tokeninterceptor",{"_index":73,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["toolbar",{"_index":495,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["toolbar.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.component.css",{"_index":496,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":497,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":494,"title":{},"body":{"components/DashboardToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:14",{"_index":505,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.ts:15",{"_index":506,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.ts:17",{"_index":510,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.ts:19",{"_index":503,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.ts:21",{"_index":509,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.ts:25",{"_index":508,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar.component.ts:37",{"_index":507,"title":{},"body":{"components/DashboardToolbarComponent.html":{}}}],["toolbar/dashboard",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":436,"title":{},"body":{"components/DashboardComponent.html":{}}}],["transferarrayitem",{"_index":330,"title":{},"body":{"components/DashboardComponent.html":{}}}],["transform",{"_index":483,"title":{},"body":{"components/DashboardComponent.html":{}}}],["transition",{"_index":482,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["true",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/CorsInterceptor.html":{},"interfaces/CreateTask.html":{},"interfaces/CreateUser.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/PatchTask.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"components/TaskContentComponent.html":{},"interfaces/TaskResponse.html":{},"injectables/TaskService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/UpdateTaskStatus.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["unit",{"_index":854,"title":{},"body":{"index.html":{}}}],["updatedtaskstatus",{"_index":360,"title":{},"body":{"components/DashboardComponent.html":{}}}],["updatetaskstatus",{"_index":336,"title":{"interfaces/UpdateTaskStatus.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/TaskService.html":{},"interfaces/UpdateTaskStatus.html":{},"coverage.html":{}}}],["urltree",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":846,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{}}}],["user.ts",{"_index":269,"title":{},"body":{"interfaces/CreateUser.html":{},"coverage.html":{}}}],["user_id",{"_index":268,"title":{},"body":{"interfaces/CreateTask.html":{},"components/NewTaskDialogComponent.html":{},"interfaces/TaskResponse.html":{}}}],["username",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUser.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"components/RegisterComponent.html":{},"interfaces/SignIn.html":{},"interfaces/UserResponse.html":{}}}],["userresponse",{"_index":152,"title":{"interfaces/UserResponse.html":{}},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"interfaces/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["users",{"_index":280,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{}}}],["userservice",{"_index":775,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usuario",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["val",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["val.email",{"_index":722,"title":{},"body":{"components/RegisterComponent.html":{}}}],["val.name",{"_index":721,"title":{},"body":{"components/RegisterComponent.html":{}}}],["val.password",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["val.username",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":322,"title":{},"body":{"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{},"components/TaskContentComponent.html":{}}}],["variable",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":887,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":828,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["via",{"_index":858,"title":{},"body":{"index.html":{}}}],["void",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DashboardToolbarComponent.html":{},"components/EditTaskDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewTaskDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["warn",{"_index":573,"title":{},"body":{"components/EditTaskDialogComponent.html":{},"components/NewTaskDialogComponent.html":{}}}],["white",{"_index":442,"title":{},"body":{"components/DashboardComponent.html":{}}}],["width",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskContentComponent.html":{}}}],["withcredentials",{"_index":230,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["x",{"_index":257,"title":{},"body":{"interceptors/CorsInterceptor.html":{},"interceptors/HttpRequestInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["y",{"_index":738,"title":{},"body":{"components/TaskContentComponent.html":{}}}],["year",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["zone.js",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                body {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDashboardToolbarComponent\n\nDashboardToolbarComponent\n\nAppModule -->\n\nDashboardToolbarComponent->AppModule\n\n\n\n\n\nEditTaskDialogComponent\n\nEditTaskDialogComponent\n\nAppModule -->\n\nEditTaskDialogComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNewTaskDialogComponent\n\nNewTaskDialogComponent\n\nAppModule -->\n\nNewTaskDialogComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTaskContentComponent\n\nTaskContentComponent\n\nAppModule -->\n\nTaskContentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nHttpRequestInterceptor\n\nHttpRequestInterceptor\n\nAppModule -->\n\nHttpRequestInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DashboardToolbarComponent\n                        \n                        \n                            EditTaskDialogComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NewTaskDialogComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TaskContentComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            HttpRequestInterceptor\n                        \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NewTaskDialogComponent } from './components/dialogs/new-task-dialog/new-task-dialog.component';\nimport { EditTaskDialogComponent } from './components/dialogs/edit-task-dialog/edit-task-dialog.component';\nimport { DashboardToolbarComponent } from './components/toolbars/dashboard-toolbar/dashboard-toolbar.component';\nimport { TaskContentComponent } from './components/task-content/task-content.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { AuthService } from './services/auth.service';\nimport {\n  CorsInterceptor,\n  HttpRequestInterceptor,\n  TokenInterceptor,\n} from './services/auth.interceptor';\nimport { RegisterComponent } from './components/pages/register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    NewTaskDialogComponent,\n    EditTaskDialogComponent,\n    DashboardToolbarComponent,\n    TaskContentComponent,\n    LoginComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthService,\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpRequestInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { authenticationGuard } from './guards/authentication.guard';\nimport { RegisterComponent } from './components/pages/register/register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    canActivate: [authenticationGuard],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UserResponse\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         String\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(login: SignIn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            SignIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(register: CreateUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                register\n                                            \n                                                            CreateUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginResponse | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { TaskResponse } from '../interfaces/task-response';\nimport { environment } from 'src/environments/environment';\nimport { SignIn } from '../interfaces/sign-in';\nimport { Injectable } from '@angular/core';\nimport { LoginResponse } from '../interfaces/login-response';\nimport { Router } from '@angular/router';\nimport { UserResponse } from '../interfaces/user-response';\nimport { CreateUser } from '../interfaces/create-user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  user!: LoginResponse | null;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.user = JSON.parse(localStorage.getItem('user') || 'null');\n  }\n\n  login(login: SignIn): Observable {\n    return this.http\n      .post(\n        `${environment.apiBaseUrl}/user/login`,\n        JSON.stringify(login),\n        {\n          headers: new HttpHeaders().set('Content-Type', 'application/json'),\n        }\n      )\n      .pipe(\n        tap((user) => {\n          this.user = user;\n          localStorage.setItem('user', JSON.stringify(user));\n        })\n      );\n  }\n\n  logout() {\n    this.user = null;\n    localStorage.removeItem('user');\n    this.router.navigate(['/login']);\n  }\n\n  register(register: CreateUser): Observable {\n    return this.http.post(\n      `${environment.apiBaseUrl}/user`,\n      JSON.stringify(register),\n      {\n        headers: new HttpHeaders().set('Content-Type', 'application/json'),\n      }\n    );\n  }\n\n  getToken(): String {\n    return this.user != undefined ? this.user.access_token : '';\n  }\n\n  isAuthenticated() {\n    return this.user != null;\n  }\n\n  getCurrentUser(): UserResponse {\n    return {\n      id: this.user!.id,\n      name: this.user!.name,\n      email: this.user!.email,\n      username: this.user!.username,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CorsInterceptor.html":{"url":"interceptors/CorsInterceptor.html","title":"interceptor - CorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.interceptor.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HTTP_INTERCEPTORS,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    req = req.clone({ withCredentials: true });\n\n    return next.handle(req).pipe(\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        }\n\n        return throwError(() => error);\n      })\n    );\n  }\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\n];\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.authService.getToken();\n\n    if (req.headers.has('Authorization') || req.url.includes('download')) {\n      const authReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next.handle(authReq);\n    }\n\n    return next.handle(req);\n  }\n}\n\n@Injectable()\nexport class CorsInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const modifiedReq = req.clone({\n      setHeaders: {\n        'Access-Control-Allow-Origin': 'http://localhost:8080',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE',\n        'Access-Control-Allow-Headers':\n          'Origin, X-Requested-With, Content-Type, Accept',\n      },\n    });\n\n    return next.handle(modifiedReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTask.html":{"url":"interfaces/CreateTask.html","title":"interface - CreateTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateTask {\n  title: string;\n\n  description: string;\n\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUser.html":{"url":"interfaces/CreateUser.html","title":"interface - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateUser {\n  name: string;\n  username: string;\n  password: string;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_user\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                done\n                            \n                            \n                                inprogress\n                            \n                            \n                                title\n                            \n                            \n                                todo\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTask\n                            \n                            \n                                drop\n                            \n                            \n                                getUserTasks\n                            \n                            \n                                openDialogEditTask\n                            \n                            \n                                parseDateString\n                            \n                            \n                                removeItemOnce\n                            \n                            \n                                replaceTask\n                            \n                            \n                                sortDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, dialog: MatDialog, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewTask\n                        \n                    \n                \n            \n            \n                \naddNewTask(newTask: TaskResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newTask\n                                            \n                                                            TaskResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            CdkDragDrop\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTasks\n                        \n                    \n                \n            \n            \n                \ngetUserTasks(user: UserResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialogEditTask\n                        \n                    \n                \n            \n            \n                \nopenDialogEditTask(task: TaskResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            TaskResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseDateString\n                        \n                    \n                \n            \n            \n                \nparseDateString(dateString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItemOnce\n                        \n                    \n                \n            \n            \n                \nremoveItemOnce(array: T[], item: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:144\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceTask\n                        \n                    \n                \n            \n            \n                \nreplaceTask(list: TaskResponse[], task: TaskResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                list\n                                            \n                                                            TaskResponse[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                task\n                                            \n                                                            TaskResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortDate\n                        \n                    \n                \n            \n            \n                \nsortDate(a: TaskResponse, b: TaskResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/dashboard/dashboard.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            TaskResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            TaskResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskResponse[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inprogress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskResponse[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'awesome_todo-list'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskResponse[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/dashboard/dashboard.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\nimport { TaskResponse } from 'src/app/interfaces/task-response';\nimport { TaskStatus } from 'src/app/interfaces/task-status';\nimport { UserResponse } from 'src/app/interfaces/user-response';\nimport { UpdateTaskStatus } from 'src/app/interfaces/update-task-status';\nimport { TaskService } from 'src/app/services/task.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditTaskDialogComponent } from '../../dialogs/edit-task-dialog/edit-task-dialog.component';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  todo: TaskResponse[] = [];\n\n  done: TaskResponse[] = [];\n\n  inprogress: TaskResponse[] = [];\n\n  title = 'awesome_todo-list';\n\n  users: UserResponse[] = [];\n\n  current_user!: UserResponse;\n\n  constructor(\n    private taskService: TaskService,\n    public dialog: MatDialog,\n    private authService: AuthService\n  ) {\n    this.current_user = authService.getCurrentUser();\n    this.getUserTasks(this.current_user);\n  }\n\n  drop(event: CdkDragDrop) {\n    const movedTask = event.item.data;\n    let newStatus: TaskStatus;\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n      if (this.todo.includes(movedTask)) {\n        newStatus = TaskStatus.TO_DO;\n      } else if (this.inprogress.includes(movedTask)) {\n        newStatus = TaskStatus.IN_PROGRESS;\n      } else if (this.done.includes(movedTask)) {\n        newStatus = TaskStatus.DONE;\n      }\n      let updatedTaskStatus: UpdateTaskStatus = { status: newStatus! };\n\n      this.taskService\n        .changeStatus(movedTask.id, updatedTaskStatus)\n        .subscribe((response) => {\n          if (response.status === TaskStatus.TO_DO) {\n            this.replaceTask(this.todo, response);\n          } else if (response.status === TaskStatus.IN_PROGRESS) {\n            this.replaceTask(this.inprogress, response);\n          } else if (response.status === TaskStatus.DONE) {\n            this.replaceTask(this.done, response);\n          }\n        });\n    }\n    this.todo.sort((a, b) => this.sortDate(a, b));\n    this.inprogress.sort((a, b) => this.sortDate(a, b));\n    this.done.sort((a, b) => this.sortDate(a, b));\n  }\n\n  replaceTask(list: TaskResponse[], task: TaskResponse) {\n    let index = list.findIndex((list_task) => list_task.id === task.id);\n    if (~index) {\n      list[index] = task;\n    } else {\n      list.push(task);\n    }\n  }\n\n  getUserTasks(user: UserResponse) {\n    this.current_user = user;\n    this.todo = [];\n    this.inprogress = [];\n    this.done = [];\n    this.taskService\n      .getTasksByUser(this.current_user.id)\n      .subscribe((response) => {\n        response\n          .sort((a, b) => {\n            return this.sortDate(a, b);\n          })\n          .forEach((element) => {\n            if (element.status === TaskStatus.TO_DO) {\n              this.todo.push(element);\n            } else if (element.status === TaskStatus.IN_PROGRESS) {\n              this.inprogress.push(element);\n            } else if (element.status === TaskStatus.DONE) {\n              this.done.push(element);\n            }\n          });\n      });\n  }\n\n  addNewTask(newTask: TaskResponse) {\n    this.todo.push(newTask);\n  }\n\n  openDialogEditTask(task: TaskResponse) {\n    const dialogRef = this.dialog.open(EditTaskDialogComponent, {\n      data: task,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        if (result.status === TaskStatus.TO_DO) {\n          this.replaceTask(this.todo, result);\n        } else if (result.status === TaskStatus.IN_PROGRESS) {\n          this.replaceTask(this.inprogress, result);\n        } else if (result.status === TaskStatus.DONE) {\n          this.replaceTask(this.done, result);\n        } else if (result === -1) {\n          this.removeItemOnce(this.todo, task);\n          this.removeItemOnce(this.inprogress, task);\n          this.removeItemOnce(this.done, task);\n        }\n      }\n    });\n  }\n\n  removeItemOnce(array: T[], item: T) {\n    var index = array.indexOf(item);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n    return item;\n  }\n\n  parseDateString(dateString: string): Date | null {\n    const [datePart, timePart] = dateString.split(', ');\n\n    const [day, month, year] = datePart.split('/').map(Number);\n\n    const [hours, minutes, seconds] = timePart.split(':').map(Number);\n\n    return new Date(year, month - 1, day, hours, minutes, seconds);\n  }\n\n  sortDate(a: TaskResponse, b: TaskResponse) {\n    const dateA = this.parseDateString(a.creationDate);\n    const dateB = this.parseDateString(b.creationDate);\n\n    if (dateA && dateB) {\n      return dateA.getTime() - dateB.getTime();\n    } else {\n      return 0;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      To do\n\n      \n        \n          \n        \n      \n    \n\n    \n      In Progress\n\n      \n        \n          \n        \n      \n    \n\n    \n      Done\n\n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .container {\n  min-height: 100%;\n  /* background-color: steelblue; */\n}\n\n.example-container {\n  width: 400px;\n  max-width: 100%;\n  margin: 0 25px 25px 0;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.example-list {\n  border: solid 1px #ccc;\n  min-height: 60px;\n  background: white;\n  border-radius: 4px;\n  overflow: hidden;\n  display: block;\n}\n\n.example-box {\n  padding: 20px 10px;\n  border-bottom: solid 1px #ccc;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  cursor: move;\n  background: white;\n  font-size: 14px;\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\n    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.example-box:last-child {\n  border: none;\n}\n\n.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              To do                                                    In Progress                                                    Done                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardToolbarComponent.html":{"url":"components/DashboardToolbarComponent.html","title":"component - DashboardToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-toolbar\n            \n\n\n\n            \n                styleUrls\n                ./dashboard-toolbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_user\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                openDialogNewTask\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changeUserEvent\n                            \n                            \n                                newTaskEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changeUserEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        newTaskEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialogNewTask\n                        \n                    \n                \n            \n            \n                \nopenDialogNewTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { NewTaskDialogComponent } from '../../dialogs/new-task-dialog/new-task-dialog.component';\nimport { UserResponse } from 'src/app/interfaces/user-response';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TaskResponse } from 'src/app/interfaces/task-response';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard-toolbar',\n  templateUrl: './dashboard-toolbar.component.html',\n  styleUrls: ['./dashboard-toolbar.component.css'],\n})\nexport class DashboardToolbarComponent {\n  @Output() changeUserEvent = new EventEmitter();\n  @Output() newTaskEvent = new EventEmitter();\n\n  users: UserResponse[] = [];\n\n  current_user!: UserResponse;\n\n  constructor(public dialog: MatDialog, private authService: AuthService) {\n    this.current_user = authService.getCurrentUser();\n  }\n\n  openDialogNewTask() {\n    const dialogRef = this.dialog.open(NewTaskDialogComponent, {\n      data: this.current_user.id,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.newTaskEvent.emit(result);\n      }\n    });\n  }\n\n  logOut() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  Awesome TO-DO List\n  \n    New Task\n  \n  \n  Log Out\n\n\n    \n\n    \n                \n                    ./dashboard-toolbar.component.css\n                \n                .example-spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Awesome TO-DO List      New Task      Log Out'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskDialogComponent.html":{"url":"components/EditTaskDialogComponent.html","title":"component - EditTaskDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditTaskDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-task-dialog\n            \n\n\n\n            \n                styleUrls\n                ./edit-task-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-task-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                errorMessages\n                            \n                            \n                                taskError\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeWithoutData\n                            \n                            \n                                editTask\n                            \n                            \n                                openConfirm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: TaskResponse, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeWithoutData\n                        \n                    \n                \n            \n            \n                \ncloseWithoutData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openConfirm\n                        \n                    \n                \n            \n            \n                \nopenConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { NewTaskDialogComponent } from '../new-task-dialog/new-task-dialog.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TaskService } from 'src/app/services/task.service';\nimport { CreateTask } from 'src/app/interfaces/create-task';\nimport { TaskResponse } from 'src/app/interfaces/task-response';\nimport { PatchTask } from 'src/app/interfaces/patch-task';\n\n@Component({\n  selector: 'app-edit-task-dialog',\n  templateUrl: './edit-task-dialog.component.html',\n  styleUrls: ['./edit-task-dialog.component.css'],\n})\nexport class EditTaskDialogComponent {\n  title: string = '';\n  description: string = '';\n  taskError = false;\n  errorMessages: string[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: TaskResponse,\n    private taskService: TaskService\n  ) {\n    this.title = data.title;\n    this.description = data.description;\n  }\n\n  editTask() {\n    let patchTask: PatchTask = {\n      title: this.title,\n      description: this.description,\n    };\n    this.taskService.patchTask(this.data.id, patchTask).subscribe({\n      next: (response) => {\n        this.dialogRef.close(response);\n      },\n      error: (error) => {\n        this.taskError = true;\n        this.errorMessages = error.error.message;\n      },\n    });\n  }\n\n  closeWithoutData() {\n    this.dialogRef.close();\n  }\n\n  openConfirm() {\n    if (confirm('¿Estás seguro de querer borrar esta tarea?')) {\n      this.taskService.deleteTask(this.data.id).subscribe(() => {\n        this.dialogRef.close(-1);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  Edit Task\n  \n    \n      \n        Title\n        \n        1 to 60 characters\n      \n    \n    \n      \n        Description\n        \n        At least 5 characters\n      \n    \n    \n      \n        {{ message }}\n      \n    \n  \n  \n    \n      delete\n    \n    Cancel\n    Ok\n  \n\n\n    \n\n    \n                \n                    ./edit-task-dialog.component.css\n                \n                .dialog-warn {\n    background-color: #ffcccb;\n    color: #b71c1c;\n    border: 3px, solid, #b71c1c;\n  }\n  \n  .text-warn {\n    color: #b71c1c;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit Task                    Title                1 to 60 characters                            Description                At least 5 characters                            {{ message }}                        delete        Cancel    Ok  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpRequestInterceptor.html":{"url":"interceptors/HttpRequestInterceptor.html","title":"interceptor - HttpRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.interceptor.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HTTP_INTERCEPTORS,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    req = req.clone({ withCredentials: true });\n\n    return next.handle(req).pipe(\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        }\n\n        return throwError(() => error);\n      })\n    );\n  }\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\n];\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.authService.getToken();\n\n    if (req.headers.has('Authorization') || req.url.includes('download')) {\n      const authReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next.handle(authReq);\n    }\n\n    return next.handle(req);\n  }\n}\n\n@Injectable()\nexport class CorsInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const modifiedReq = req.clone({\n      setHeaders: {\n        'Access-Control-Allow-Origin': 'http://localhost:8080',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE',\n        'Access-Control-Allow-Headers':\n          'Origin, X-Requested-With, Content-Type, Accept',\n      },\n    });\n\n    return next.handle(modifiedReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formError\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/login/login.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/login/login.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/login/login.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  formError = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  login() {\n    const val = this.loginForm.value;\n\n    if (val.username && val.password) {\n      this.authService\n        .login({\n          username: val.username,\n          password: val.password,\n        })\n        .subscribe({\n          next: (response) => {\n            this.authService.user = response;\n            this.router.navigate(['']);\n          },\n          error: (error) => {\n            if (error.status) {\n              this.formError = true;\n            }\n          },\n        });\n    }\n  }\n\n  register() {\n    this.router.navigate(['register']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Username:\n        \n      \n    \n    \n      \n        Password:\n        \n      \n    \n    \n      Usuario o Contraseña incorrecto\n    \n    \n      Login\n      \n        Register\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Username:                                    Password:                            Usuario o Contraseña incorrecto              Login              Register            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/login-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResponse {\n  id: string;\n  name: string;\n  username: string;\n  email: string;\n  access_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/material.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewTaskDialogComponent.html":{"url":"components/NewTaskDialogComponent.html","title":"component - NewTaskDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewTaskDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-task-dialog\n            \n\n\n\n            \n                styleUrls\n                ./new-task-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./new-task-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                errorMessages\n                            \n                            \n                                taskError\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeWithoutData\n                            \n                            \n                                createTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: string, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeWithoutData\n                        \n                    \n                \n            \n            \n                \ncloseWithoutData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TaskService } from 'src/app/services/task.service';\nimport { CreateTask } from 'src/app/interfaces/create-task';\n\n@Component({\n  selector: 'app-new-task-dialog',\n  templateUrl: './new-task-dialog.component.html',\n  styleUrls: ['./new-task-dialog.component.css'],\n})\nexport class NewTaskDialogComponent {\n  title: string = '';\n  description: string = '';\n  taskError = false;\n  errorMessages: string[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: string,\n    private taskService: TaskService\n  ) {}\n\n  createTask() {\n    let newTask: CreateTask = {\n      title: this.title,\n      description: this.description,\n      user_id: this.data,\n    };\n    this.taskService.postTask(newTask).subscribe({\n      next: (response) => {\n        this.dialogRef.close(response);\n      },\n      error: (error) => {\n        this.taskError = true;\n        this.errorMessages = error.error.message;\n      },\n    });\n  }\n\n  closeWithoutData() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  New Task\n  \n    \n      \n        Title\n        \n        1 to 60 characters\n      \n    \n    \n      \n        Description\n        \n        At least 5 characters\n      \n    \n    \n      {{ message }}\n    \n  \n  \n    Cancel\n    Ok\n  \n\n\n    \n\n    \n                \n                    ./new-task-dialog.component.css\n                \n                .dialog-warn {\n  background-color: #ffcccb;\n  color: #b71c1c;\n  border: 3px, solid, #b71c1c;\n}\n\n.text-warn {\n  color: #b71c1c;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  New Task                    Title                1 to 60 characters                            Description                At least 5 characters                    {{ message }}            Cancel    Ok  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewTaskDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PatchTask.html":{"url":"interfaces/PatchTask.html","title":"interface - PatchTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PatchTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/patch-task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PatchTask {\n  title: string;\n\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                formError\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/register/register.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/register/register.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/register/register.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/register/register.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/register/register.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/register/register.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent {\n  registerForm: FormGroup;\n  formError = false;\n  errorMessages: string[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', Validators.required],\n    });\n  }\n\n  register() {\n    const val = this.registerForm.value;\n\n    if (val.username && val.password) {\n      this.authService\n        .register({\n          name: val.name,\n          username: val.username,\n          password: val.password,\n          email: val.email,\n        })\n        .subscribe({\n          next: (response) => {\n            this.authService.user = response;\n            this.router.navigate(['']);\n          },\n          error: (error) => {\n            this.formError = true;\n            this.errorMessages = error.error.message;\n          },\n        });\n    }\n  }\n\n  back() {\n    this.router.navigate(['login']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Name:\n        \n      \n    \n    \n      \n        Username:\n        \n      \n    \n    \n      \n        Password:\n        \n      \n    \n    \n      \n        email:\n        \n      \n    \n    \n      {{ message }}\n    \n    \n      Back\n      \n        Register\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Name:                                    Username:                                    Password:                                    email:                            {{ message }}              Back              Register            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignIn.html":{"url":"interfaces/SignIn.html","title":"interface - SignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/sign-in.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignIn {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskContentComponent.html":{"url":"components/TaskContentComponent.html","title":"component - TaskContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-content/task-content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-content\n            \n\n\n\n            \n                styleUrls\n                ./task-content.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         TaskResponse\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-content/task-content.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TaskResponse } from 'src/app/interfaces/task-response';\n\n@Component({\n  selector: 'app-task-content',\n  templateUrl: './task-content.component.html',\n  styleUrls: ['./task-content.component.css'],\n})\nexport class TaskContentComponent {\n  @Input() task!: TaskResponse;\n}\n\n    \n\n    \n        \n  \n    {{ task.title }}\n    \n      {{ task.creationDate }}\n    \n  \n  \n    {{ task.description }}\n  \n\n\n    \n\n    \n                \n                    ./task-content.component.css\n                \n                .scrollable-text {\n  max-height: 70px;\n  overflow-y: auto;\n  margin: 0;\n  padding: 0;\n}\n\n:host {\n  display: block;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ task.title }}          {{ task.creationDate }}            {{ task.description }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardToolbarComponent', 'selector': 'app-dashboard-toolbar'},{'name': 'EditTaskDialogComponent', 'selector': 'app-edit-task-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewTaskDialogComponent', 'selector': 'app-new-task-dialog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TaskContentComponent', 'selector': 'app-task-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskResponse.html":{"url":"interfaces/TaskResponse.html","title":"interface - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/task-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         TaskStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TaskStatus } from './task-status';\n\nexport interface TaskResponse {\n  id: string;\n  title: string;\n  description: string;\n  status: TaskStatus;\n  creationDate: string;\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStatus\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTasksByUser\n                            \n                            \n                                patchTask\n                            \n                            \n                                postTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStatus\n                        \n                    \n                \n            \n            \n                \nchangeStatus(id: string, status: UpdateTaskStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            UpdateTaskStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksByUser\n                        \n                    \n                \n            \n            \n                \ngetTasksByUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchTask\n                        \n                    \n                \n            \n            \n                \npatchTask(id: string, patchTask: PatchTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchTask\n                                            \n                                                            PatchTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postTask\n                        \n                    \n                \n            \n            \n                \npostTask(createTask: CreateTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTask\n                                            \n                                                            CreateTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TaskResponse } from '../interfaces/task-response';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UpdateTaskStatus } from '../interfaces/update-task-status';\nimport { CreateTask } from '../interfaces/create-task';\nimport { PatchTask } from '../interfaces/patch-task';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  constructor(private http: HttpClient) {}\n\n  getTasksByUser(id: string): Observable {\n    return this.http.get(\n      `${environment.apiBaseUrl}/task/user/${id}`,\n      {\n        headers: new HttpHeaders().set('Authorization', 'Bearer '),\n      }\n    );\n  }\n\n  changeStatus(id: string, status: UpdateTaskStatus): Observable {\n    return this.http.patch(\n      `${environment.apiBaseUrl}/task/status/${id}`,\n      JSON.stringify(status),\n      {\n        headers: new HttpHeaders()\n          .set('Authorization', 'Bearer ')\n          .set('Content-Type', 'application/json'),\n      }\n    );\n  }\n\n  postTask(createTask: CreateTask): Observable {\n    return this.http.post(\n      `${environment.apiBaseUrl}/task`,\n      JSON.stringify(createTask),\n      {\n        headers: new HttpHeaders()\n          .set('Authorization', 'Bearer ')\n          .set('Content-Type', 'application/json'),\n      }\n    );\n  }\n\n  patchTask(id: string, patchTask: PatchTask): Observable {\n    return this.http.patch(\n      `${environment.apiBaseUrl}/task/${id}`,\n      JSON.stringify(patchTask),\n      {\n        headers: new HttpHeaders()\n          .set('Authorization', 'Bearer ')\n          .set('Content-Type', 'application/json'),\n      }\n    );\n  }\n\n  deleteTask(id: string) {\n    return this.http.delete(`${environment.apiBaseUrl}/task/${id}`, {\n      headers: new HttpHeaders().set('Authorization', 'Bearer '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.interceptor.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.interceptor.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HTTP_INTERCEPTORS,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    req = req.clone({ withCredentials: true });\n\n    return next.handle(req).pipe(\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        }\n\n        return throwError(() => error);\n      })\n    );\n  }\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\n];\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.authService.getToken();\n\n    if (req.headers.has('Authorization') || req.url.includes('download')) {\n      const authReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next.handle(authReq);\n    }\n\n    return next.handle(req);\n  }\n}\n\n@Injectable()\nexport class CorsInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const modifiedReq = req.clone({\n      setHeaders: {\n        'Access-Control-Allow-Origin': 'http://localhost:8080',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE',\n        'Access-Control-Allow-Headers':\n          'Origin, X-Requested-With, Content-Type, Accept',\n      },\n    });\n\n    return next.handle(modifiedReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateTaskStatus.html":{"url":"interfaces/UpdateTaskStatus.html","title":"interface - UpdateTaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateTaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/update-task-status.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         TaskStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TaskStatus } from './task-status';\n\nexport interface UpdateTaskStatus {\n  status: TaskStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserResponse.html":{"url":"interfaces/UserResponse.html","title":"interface - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserResponse {\n  id: string;\n  name: string;\n  username: string;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UserResponse } from '../interfaces/user-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  getAllUsers(): Observable {\n    return this.http.get(`${environment.apiBaseUrl}/user`, {\n      headers: new HttpHeaders().set('Authorization', 'Bearer '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/dialogs/edit-task-dialog/edit-task-dialog.component.ts\n            \n            component\n            EditTaskDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/dialogs/new-task-dialog/new-task-dialog.component.ts\n            \n            component\n            NewTaskDialogComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/pages/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/pages/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/task-content/task-content.component.ts\n            \n            component\n            TaskContentComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/toolbars/dashboard-toolbar/dashboard-toolbar.component.ts\n            \n            component\n            DashboardToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/guards/authentication.guard.ts\n            \n            variable\n            authenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-task.ts\n            \n            interface\n            CreateTask\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-user.ts\n            \n            interface\n            CreateUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/login-response.ts\n            \n            interface\n            LoginResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/patch-task.ts\n            \n            interface\n            PatchTask\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/sign-in.ts\n            \n            interface\n            SignIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/task-response.ts\n            \n            interface\n            TaskResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/update-task-status.ts\n            \n            interface\n            UpdateTaskStatus\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-response.ts\n            \n            interface\n            UserResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/auth.interceptor.ts\n            \n            interceptor\n            CorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/auth.interceptor.ts\n            \n            interceptor\n            HttpRequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.interceptor.ts\n            \n            variable\n            httpInterceptorProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task-status.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/task-status.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 TO_DO\n                            \n                        \n                        \n                            \n                                Value : TO-DO\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n                        \n                            \n                                Value : DONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAwesomeTodoList\nThis project was generated with Angular CLI version 16.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDashboardToolbarComponent\n\nDashboardToolbarComponent\n\nAppModule -->\n\nDashboardToolbarComponent->AppModule\n\n\n\n\n\nEditTaskDialogComponent\n\nEditTaskDialogComponent\n\nAppModule -->\n\nEditTaskDialogComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNewTaskDialogComponent\n\nNewTaskDialogComponent\n\nAppModule -->\n\nNewTaskDialogComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTaskContentComponent\n\nTaskContentComponent\n\nAppModule -->\n\nTaskContentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nHttpRequestInterceptor\n\nHttpRequestInterceptor\n\nAppModule -->\n\nHttpRequestInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authenticationGuard   (src/.../authentication.guard.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpInterceptorProviders   (src/.../auth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/authentication.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticationGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot\n): boolean | UrlTree => {\n  const authService: AuthService = inject(AuthService);\n  const router: Router = inject(Router);\n\n  if (!authService.isAuthenticated()) {\n    return router.parseUrl('login');\n  }\n\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiBaseUrl: 'http://localhost:3000',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiBaseUrl: 'http://localhost:3000',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpInterceptorProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
